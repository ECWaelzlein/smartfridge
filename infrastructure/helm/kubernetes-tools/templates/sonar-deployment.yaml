{{ $dbSonarqubeUsername := required "dbSonarqubeUsername is a required value" .Values.dbSonarqubeUsername }}
{{ $dbSonarqubeServerName := required "dbSonarqubeServerName is a required value" .Values.dbSonarqubeServerName }}
{{ $dbSonarqubeHostName := required "dbSonarqubeHostName is a required value" .Values.dbSonarqubeHostName }}
{{ $namespace := required "namespace is a required value" .Values.namespace }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarqube
  name: sonarqube
  namespace: {{$namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      initContainers:
      - name: init-docker-host
        image: busybox
        command: ["/bin/sh"]
        args:
          - -c
          - >-
              sysctl -w vm.max_map_count=262144 &&
              sysctl -w fs.file-max=65536 &&
              ulimit -n 65536 &&
              ulimit -u 4096
        securityContext:
          privileged: true
      securityContext:
        fsGroup: 999
      containers:
        - name: sonarqube
          image: '{{.Values.sonarqube.image.name}}:{{.Values.sonarqube.image.tag}}'
          imagePullPolicy: {{.Values.sonarqube.image.pullPolicy}}
          resources:
            requests:
              cpu: 500m
              memory: 1024Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          volumeMounts:
          - mountPath: "/opt/sonarqube/data/"
            name: sonar-data
            subPath: data
          - mountPath: "/opt/sonarqube/extensions/plugins/tmp"
            name: sonar-extensions
            subPath: tmp
          - mountPath: "/opt/sonarqube/extensions/downloads"
            name: sonar-extensions
            subPath: downloads
          - mountPath: "/opt/sonarqube/extensions/plugins"
            name: sonar-extensions
            subPath: plugins
          - mountPath: "/opt/sonarqube/temp"
            name: sonar-data
            subPath: temp
          - mountPath: "/opt/sonarqube/logs"
            name: sonar-extensions
            subPath: logs
          - mountPath: "/tmp"
            name: tmp-dir
          env:
          - name: "SONARQUBE_WEB_CONTEXT"
            value: "/sonarqube"
          - name: "SONARQUBE_JDBC_USERNAME"
            value: "{{$dbSonarqubeUsername}}@{{$dbSonarqubeServerName}}"
          - name: "SONARQUBE_JDBC_URL"
            value: "jdbc:postgresql://{{$dbSonarqubeHostName}}:5432/{{.Values.sonarqube.db.dbName}}"
          - name: "SONARQUBE_JDBC_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: postgres
                key: password
          ports:
          - containerPort: 9000
            protocol: TCP
      volumes:
      - name: sonar-data
        persistentVolumeClaim:
          claimName: sonar-data
      - name: sonar-extensions
        persistentVolumeClaim:
          claimName: sonar-extensions
      - name: tmp-dir
        emptyDir: {}