---
#apiVersion: v1
#kind: Namespace
#metadata:
#  name: game-2048
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: tools
  name: deployment-2048
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-2048
  replicas: 5
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-2048
    spec:
      containers:
      - image: alexwhen/docker-2048
        imagePullPolicy: Always
        name: app-2048
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: tools
  name: service-2048
spec:
  ports:
    - port: 8080
      targetPort: 80
      protocol: TCP
  type: ClusterIP
  selector:
    app.kubernetes.io/name: app-2048
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: tools
  name: ingress-2048
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    #service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    #service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-2:484755436758:certificate/2ea87eaa-a826-4df8-9400-80f17c6fb77f"
    #service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    # Reihenfolge einstellen der Rules
    # alb.ingress.kubernetes.io/group.order: <'10'>
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    #alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/group: myapp
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-east-2:484755436758:certificate/2ea87eaa-a826-4df8-9400-80f17c6fb77f"
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: service-2048
              servicePort: 8080